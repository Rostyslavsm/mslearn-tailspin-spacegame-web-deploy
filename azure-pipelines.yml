# Simplified Hybrid Pipeline - No Checkout Version (Validator-Friendly)

trigger:
- '*'

stages:

# -----------------------------------------------------------
# STAGE 1: "Build" on the Self-Hosted Agent
# -----------------------------------------------------------
- stage: 'Build'
  displayName: 'Build on Self-Hosted Agent'
  jobs: 
  - job: 'Build'
    displayName: 'Create and Package Artifact'
    pool:
      name: 'SecureAgents' # This targets your VM agent

    steps:
    # --- THIS IS THE CORRECTED PLACEMENT ---
    # This is now the first step, replacing the default checkout.
    - checkout: none

    # 2. Create a simple index.html file to act as our "build output".
    - script: echo "Pipeline run $(Build.BuildNumber) was deployed successfully." > $(Build.ArtifactStagingDirectory)/index.html
      displayName: 'Create Dummy Web Page'

    # 3. Zip the file. The Azure Web App deployment task expects a .zip file.
    - task: ArchiveFiles@2
      displayName: 'Archive files into a .zip package'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/WebApp.zip'
        replaceExistingArchive: true

    # 4. Publish the .zip file as an artifact named 'drop' so other stages can use it.
    - publish: '$(Build.ArtifactStagingDirectory)/WebApp.zip'
      artifact: drop
      displayName: 'Publish Artifact'

# -----------------------------------------------------------
# STAGE 2: "Test" on the Self-Hosted Agent
# -----------------------------------------------------------
- stage: 'Test'
  displayName: 'Test on Self-Hosted Agent'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: 'TestJob'
    displayName: 'Run Simple Tests'
    pool:
      name: 'SecureAgents' # This also targets your VM agent
    
    steps:
    # We add "checkout: none" here as well to be safe,
    # as this job also runs on the memory-constrained VM.
    - checkout: none
    
    - script: echo "Simulating automated tests on the self-hosted agent..."
      displayName: 'Run Dummy Unit Tests'

# -----------------------------------------------------------
# STAGE 3: Deploy from a Microsoft-Hosted Agent
# -----------------------------------------------------------
- stage: 'Deploy'
  displayName: 'Deploy from Azure-Hosted Agent'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - deployment: 'DeployToDev'
    displayName: 'Deploy to Dev Environment'
    pool:
      vmImage: 'ubuntu-22.04' # This targets a fast Microsoft agent
    
    environment: 'Development' # This enables manual approval

    strategy:
      runOnce:
        deploy:
          steps:
          # This job runs on a powerful agent, so it will download the artifact fine.
          - download: current
            artifact: drop
          
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: Dev Website'
            inputs:
              azureSubscription: 'Azure subscription 1(25ce748a-be5c-42fd-b2f6-d6a5d73d5a3d)'
              appType: 'webAppLinux'
              appName: 'tailspin-space-game-web-dev-22768' 
              package: '$(Pipeline.Workspace)/drop/WebApp.zip'