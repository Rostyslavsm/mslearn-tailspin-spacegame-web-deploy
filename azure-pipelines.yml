# Starting trigger. A push to any branch will run this.
trigger:
- '*'

# Global variables
variables:
  buildConfiguration: 'Release'
  
# The pipeline is organized into STAGES
stages:

# -----------------------------------------------------------
# STAGE 1: Build the code on Self-Hosted Agent
# -----------------------------------------------------------
- stage: 'Build'
  displayName: 'Build on Self-Hosted Agent'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    
    pool:
      name: 'SecureAgents'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK 8.x'
      inputs:
        version: '8.x'
    
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

# -----------------------------------------------------------
# STAGE 2: Run a simple test on Self-Hosted Agent
# -----------------------------------------------------------
- stage: 'Test'
  displayName: 'Test on Self-Hosted Agent'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: 'TestJob'
    displayName: 'Run simple tests'
    
    pool:
      name: 'SecureAgents'
    
    steps:
    - script: echo "Running automated tests on the self-hosted agent..."
      displayName: 'Simulate Running Unit Tests'

# -----------------------------------------------------------
# STAGE 3: Deploy the code from a Microsoft-Hosted Agent
# -----------------------------------------------------------
- stage: 'Deploy'
  displayName: 'Deploy from Azure-Hosted Agent'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - deployment: 'DeployToDev'
    displayName: 'Deploy to Dev Environment'
    
    pool:
      vmImage: 'ubuntu-22.04' 
    
    # An environment allows for approvals and tracking
    environment: 'Development'

    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: Dev Website'
            inputs:
              azureSubscription: 'Azure subscription 1(25ce748a-be5c-42fd-b2f6-d6a5d73d5a3d)'
              appType: 'webAppLinux'
              appName: 'tailspin-space-game-web-dev-22768'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'